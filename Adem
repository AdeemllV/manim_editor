from manim import *

class Animate(Scene):
    def construct(self):
        grid = NumberPlane()

        self.add(grid) # Make sure title is on top of grid
       
        self.play(
            Create(grid, run_time=3, lag_ratio=0.1),
        )
        
        self.wait(1)
        
        equation_text_scale = .62;
        
        label_x = Text("x =").scale(equation_text_scale)
        label_y = Text("y =").scale(equation_text_scale)

        # Create MathTex objects for the parametric equations
        equation_x = MathTex(r"\sin^3(t)").scale(equation_text_scale).set_color(RED)
        equation_y = MathTex(r"13\cos(t) - 5\cos(2t) - 2\cos(3t) - \cos(4t)").scale(equation_text_scale).set_color(GREEN)

        # Align equations and labels
        label_x.next_to(equation_x, LEFT, buff=0.3)
        label_y.next_to(equation_y, LEFT, buff=0.3)

        # Combine equations and labels into a VGroup
        equations_group = VGroup(
            VGroup(label_x, equation_x),
            VGroup(label_y, equation_y),
        ).arrange(DOWN, aligned_edge=LEFT).to_corner(UL)

        # Play animations
        self.play(Write(equations_group))
        self.wait(1)
        
        def heart_func(t):
            x = 16 * np.sin(t)**3
            y = 13 * np.cos(t) - 5 * np.cos(2*t) - 2 * np.cos(3*t) - np.cos(4*t)
            return np.array([x/6.3, y/6.3, 0])
        
        graph = ParametricFunction(
            heart_func,
            color=RED,
            t_range = (0, TAU),
            fill_opacity=.5
        )
        
        self.play (Create (graph), run_time=3)
        
        self.wait(1)

        text = Text("Rahma", color=GREEN).scale(1.4)
        
        self.play (Write (text))
        
        self.wait(3)
